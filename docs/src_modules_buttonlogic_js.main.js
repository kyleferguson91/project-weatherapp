"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkproject_weatherapp"] = self["webpackChunkproject_weatherapp"] || []).push([["src_modules_buttonlogic_js"],{

/***/ "./src/modules/buttonlogic.js":
/*!************************************!*\
  !*** ./src/modules/buttonlogic.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addButtonLogic\": () => (/* binding */ addButtonLogic),\n/* harmony export */   \"addSearchButtonLogic\": () => (/* binding */ addSearchButtonLogic)\n/* harmony export */ });\n// this is a master function that will call all functions to add button logic!\r\nfunction addButtonLogic() {\r\n    addSearchButtonLogic()\r\n    addUnitLogic()\r\n}\r\n\r\n\r\n\r\nasync function addSearchButtonLogic() {\r\n\r\n    const searchbutton = document.querySelector('#submitbutton')\r\n\r\n    searchbutton.addEventListener('click', async (e) => {\r\n       \r\n        e.preventDefault()\r\n\r\n\r\n        const input = document.querySelector('#searcher')\r\n        const country = document.querySelectorAll('option')\r\n        let selectedcountry = 'CA';\r\n\r\n        country.forEach((elem,ind,arr) => {\r\n           if (elem.selected) {\r\n            selectedcountry = elem.value\r\n           }\r\n        \r\n        })\r\n\r\n        console.log(input.value, selectedcountry)\r\n   \r\n\r\n\r\n\r\n\r\n        // now wait for main weathergetfunction through script\r\n        let weather = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../script.js */ \"./src/script.js\"))\r\n\r\n\r\n        // now it is imported, wait upon the promise to resolve the response\r\n        // this will console log itself\r\n        let units = selectedcountry == 'CA' ? 'metric' : 'imperial'\r\n       weather = await weather.importWeather('search',units, input.value, selectedcountry)\r\n    \r\n       // now we have the relevant variables created within \r\n       //import weather to update the dom accordingly!\r\n       input.value = \"\"\r\n  \r\n     \r\n    })\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction addUnitLogic() {\r\n\r\nconst unitbutton = document.querySelector('.unitselector')\r\n\r\nunitbutton.addEventListener('click', async (e) => {\r\n\r\ntry {\r\n    // when we click anywhere in the span, move the slider\r\n\r\nconst slider = document.querySelector('.slider')\r\n\r\n// when we move the slider we want to call the API again and update the dom\r\n// this time with different units!\r\n\r\nlet change = await __webpack_require__.e(/*! import() */ \"src_modules_domLogic_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../modules/domLogic.js */ \"./src/modules/domLogic.js\"))\r\n\r\n\r\nif (slider.classList.contains('moveselector')) {\r\n\r\n    // if it is currently on class, remove the class\r\n    // and call the api with metric\r\n    slider.classList.remove('moveselector')\r\n    console.log(change.changeUnit('metric'))\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nelse {\r\n\r\n\r\n    // add the class and call api with imperial,\r\n    // also adjust wind speed content.. variable in dom logic\r\n\r\n    slider.classList.add('moveselector')\r\n    console.log(change.changeUnit('imperial'))\r\n\r\n\r\n\r\n\r\n\r\n}\r\n// once this happens update the dom accordingly..\r\n// if class is present, units are imperial, if no present, units are metric!\r\n\r\n\r\n\r\n\r\n}\r\n\r\ncatch(err)\r\n {\r\n    console.log('error in unitbutton event lister', err)\r\n }\r\n\r\n\r\n})\r\n\r\n\r\n\r\n}\n\n//# sourceURL=webpack://project-weatherapp/./src/modules/buttonlogic.js?");

/***/ })

}]);